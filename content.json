{"pages":[{"title":"关于CyanStudio","text":"CHASING FOR PERFECT WITH POOR HEAD","link":"/about/index.html"}],"posts":[{"title":"VS小知识之 生成事件命令行","text":"生成事件命令行 在使用 visual studio 开发类库的时候，有这么一种需求——在生成类库之后自动将其复制到另一个目录进行测试， 这个需求可以用项目下的 生成事件 来达到，步骤： 打开项目，双击目录中的 Properties，在打开的界面中选择 生成事件 在 生成后事件命令行 框中写入 1copy /y &quot;$(TargetDir)$(ProjectName).dll&quot; &quot;目标目录&quot; 保存。 你可以使用不同命令达成不同的需求。$(TargetDir)和$(ProjectName)使用了 visual studio 提供的宏，在 生成事件 页面依次点击 编辑后期生成 ==&gt; 宏 可查看定义好的宏。 注：不同VS版本的界面有些许差异。","link":"/2022/03/30/2022-04-02-vs-tips/"},{"title":"Unity小知识之 Prefab的Transform","text":"预制体-Prefab Prefab，是将 Scene 中的 GameObject 保存成文件资源后的一种叫法。在保存时，Transfrom 的三个属性—— Position，Rotation，Scale ——均被保留下来（在 Inspector 中可以看到），但在使用预制体克隆物体到 Scene 中时，Position 和 Rotation 并不会影响克隆出物体的对应属性，它们会被归零。 举个例子，你希望通过修改预制体的 Rotation 来达到克隆出的 GameObject 自带一定旋转，但是当你在实例化且不添加旋转时，如 Instantiate(go, position, Quaternion.identity); 你会发现克隆出的物体回正了，使用 Scene 中的物体克隆也会如此。 因此，在克隆物体时要格外小心，且最好始终让 Prefab 的 Transform 为默认值， 以免误解， 并通过额外的操作来使克隆体旋转。 注: Unity 检视面板 (Inspector) 中的 Rotation 为 本地欧拉角 (localEulerAngles)， 其余二者也为本地量。","link":"/2022/04/04/2022-04-04-unity-tips/"},{"title":"VSCode小知识之 为C#工程添加本地库","text":".csproj文件 在配置好使用 visual studio code 编写 C# 代码后， 遇到了一个新的问题–如何引入本地库。 搜索一番没找到答案， 结果刚刚使用 visual studio 的时候突发奇想， 对比了 visual studio 和 visual studio code 工程下的 .csproj 文件， 发现其中有一条差距为 123&lt;Reference Include=&quot;target&quot;&gt;&lt;HintPath&gt;..\\lib\\target.dll&lt;/HintPath&gt;&lt;/Reference&gt; 于是依样画葫芦， 修改 visual studio code 里 C# 控制台工程下的 .csproj， 把库文件像这样添加进去， 结果识别成功。 有点意识到一个工程是如何被组织起来的了， 不过还是不清楚到底有哪些标签。","link":"/2022/04/09/2022-04-09-vscode-tips/"},{"title":"Windows技巧之 使用运行打开程序","text":"快捷启动应用 在 Windows 中，可以通过 运行， cmd， powershell 等方式快捷打开程序，其中个人觉得最好用的是 运行。 非Windows应用商店的应用 首先，在桌面创建文件夹，将此文件夹的目录地址添加到用户变量的 Path 内；然后，将应用的启动文件 （.exe） 的快捷方式（没有则创建）放入到此文件夹中，改一个好记且简单的名字；这样便可以通过 （win+r） 输入对应的名称打开。比如 steam --&gt;stm，visual studio --&gt; vs，photoshop --&gt; ps 为什么把文件夹放在桌面呢？因为通常情况下安装程序会在桌面创建快捷方式，这样每次安装新的应用时只需要将其改名并拖入该文件夹即可；而且放在桌面也可以随时打开，以免忘了修改后的名称。 Windows应用商店的应用 在 Windows应用商店 里下载的程序自带别名，可在 C:\\Users\\UserName\\AppData\\Local\\Microsoft\\WindowsApps 中查看（如 windows terminal 的别名为 wt.exe，输入 wt 即可打开），该文件夹默认添加到了用户环境变量中，因此可以直接快捷打开。 注：以上方法的快捷度取决于你对 键盘输入快于鼠标移动加点击 的认可度。","link":"/2022/04/10/2022-04-10-windowsapps/"}],"tags":[{"name":"vs","slug":"vs","link":"/tags/vs/"},{"name":"tips","slug":"tips","link":"/tags/tips/"},{"name":"unity","slug":"unity","link":"/tags/unity/"},{"name":"vscode","slug":"vscode","link":"/tags/vscode/"},{"name":"windows","slug":"windows","link":"/tags/windows/"}],"categories":[]}